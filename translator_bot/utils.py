import logging
import asyncio
from langdetect import DetectorFactory, detect
from deep_translator import GoogleTranslator


logger = logging.getLogger(__name__)

# ะะปั ััะฐะฑะธะปัะฝะพะณะพ ะพะฟัะตะดะตะปะตะฝะธั ัะทัะบะฐ
DetectorFactory.seed = 0

# ะคัะฝะบัะธั ะดะปั ะพะฟัะตะดะตะปะตะฝะธั ัะทัะบะฐ ะธ ะฟะตัะตะฒะพะดะฐ
async def translate_text_if_needed(text):
    """ะะฟัะตะดะตะปัะตั ัะทัะบ ัะตะบััะฐ ะธ ะฟะตัะตะฒะพะดะธั ะตะณะพ ะฝะฐ ััััะบะธะน, ะตัะปะธ ััะตะฑัะตััั."""
    supported_languages = {
        'en': '๐ฌ๐ง ะะฝะณะปะธะนัะบะธะน',
        'de': '๐ฉ๐ช ะะตะผะตัะบะธะน',
        'fr': '๐ซ๐ท ะคัะฐะฝััะทัะบะธะน',
        'es': '๐ช๐ธ ะัะฟะฐะฝัะบะธะน',
        'pt': '๐ต๐น ะะพัััะณะฐะปััะบะธะน',
        'it': '๐ฎ๐น ะัะฐะปััะฝัะบะธะน',
        'pl': '๐ต๐ฑ ะะพะปััะบะธะน',
        'tr': '๐น๐ท ะขััะตัะบะธะน',
        'fa': '๐ฎ๐ท ะะตััะธะดัะบะธะน',
        'ar': '๐ธ๐ฆ ะัะฐะฑัะบะธะน',
        'hi': '๐ฎ๐ณ ะฅะธะฝะดะธ',
        'ja': '๐ฏ๐ต ะฏะฟะพะฝัะบะธะน',
        'zh': '๐จ๐ณ ะะธัะฐะนัะบะธะน',
    }
    try:
        # ะะฟัะตะดะตะปัะตะผ ัะทัะบ ัะตะบััะฐ
        lang = detect(text)
        if lang in supported_languages:
            translated = await asyncio.to_thread(GoogleTranslator(source=lang, target='ru').translate, text)
            return f"๐ ะะตัะตะฒะพะด ะฝะฐ ััััะบะธะน (ัะทัะบ - {supported_languages[lang]}):\n\n {translated}"

        return None  # ะัะปะธ ัะตะบัั ะฝะฐ ััััะบะพะผ, ะฝะธัะตะณะพ ะฝะต ะฒะพะทะฒัะฐัะฐะตะผ

    except Exception as e:
        logger.error(f"ะัะธะฑะบะฐ ะฟัะธ ะฟะตัะตะฒะพะดะต ัะตะบััะฐ: {e}")
        return None