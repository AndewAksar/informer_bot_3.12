import requests
import logging
import pytz
from datetime import datetime

from config import CITY, WEATHER_URL


logger = logging.getLogger(__name__)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞ –∏–∫–æ–Ω–∫–∏ –≤ —ç–º–æ–¥–∑–∏
def get_weather_emoji(icon):
    icon_to_emoji = {
        '01d': '‚òÄÔ∏è', '01n': 'üåô',  # –Ø—Å–Ω–æ
        '02d': '‚õÖ', '02n': '‚õÖ',  # –ú–∞–ª–æ–æ–±–ª–∞—á–Ω–æ
        '03d': '‚òÅÔ∏è', '03n': '‚òÅÔ∏è',  # –û–±–ª–∞—á–Ω–æ
        '04d': '‚òÅÔ∏è', '04n': '‚òÅÔ∏è',  # –ü–æ–ª–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å
        '09d': 'üåßÔ∏è', '09n': 'üåßÔ∏è',  # –î–æ–∂–¥—å
        '10d': 'üå¶Ô∏è', '10n': 'üå¶Ô∏è',  # –ù–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å
        '11d': '‚õàÔ∏è', '11n': '‚õàÔ∏è',  # –ì—Ä–æ–∑–∞
        '13d': '‚ùÑÔ∏è', '13n': '‚ùÑÔ∏è',  # –°–Ω–µ–≥
        '50d': 'üå´Ô∏è', '50n': 'üå´Ô∏è'   # –¢—É–º–∞–Ω
    }
    return icon_to_emoji.get(icon, 'üå°Ô∏è')  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ
def get_weather():
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ
        response = requests.get(WEATHER_URL)
        response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞
        data = response.json()

        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ
        emoji = get_weather_emoji(data['weather'][0]['icon'])
        temp = data['main']['temp']
        feels_like = data['main']['feels_like']
        description = data['weather'][0]['description']
        humidity = data['main']['humidity']
        wind_speed = data['wind']['speed']
        pressure = data['main']['pressure']     # –î–∞–≤–ª–µ–Ω–∏–µ –≤ –≥–ü–∞
        visibility = data['visibility'] / 1000  # –í–∏–¥–∏–º–æ—Å—Ç—å –≤ –∫–∏–ª–æ–º–µ—Ç—Ä–∞—Ö
        cloudiness = data['clouds']['all']      # –û–±–ª–∞—á–Ω–æ—Å—Ç—å –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö

        # –í–æ—Å—Ö–æ–¥ –∏ –∑–∞–∫–∞—Ç —Å–æ–ª–Ω—Ü–∞ (–ø–µ—Ä–µ–≤–æ–¥–∏–º –∏–∑ Unix timestamp –≤ –ª–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–∞)
        ekb_tz = pytz.timezone('Asia/Yekaterinburg')
        sunrise = datetime.fromtimestamp(data['sys']['sunrise'], tz=ekb_tz).strftime('%H:%M')
        sunset = datetime.fromtimestamp(data['sys']['sunset'], tz=ekb_tz).strftime('%H:%M')

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        return (f'üå§Ô∏è –ü–æ–≥–æ–¥–∞ –≤ {CITY} –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n'
                f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C\n'
                f'–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {feels_like}¬∞C\n'
                f'–ü–æ–≥–æ–¥–∞: {description} {emoji}\n'
                f'–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n'
                f'–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed} –º/—Å\n'
                f'–î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –≥–ü–∞\n'
                f'–í–∏–¥–∏–º–æ—Å—Ç—å: {visibility} –∫–º\n'
                f'–û–±–ª–∞—á–Ω–æ—Å—Ç—å: {cloudiness}%\n'
                f'–í–æ—Å—Ö–æ–¥ —Å–æ–ª–Ω—Ü–∞: {sunrise}\n'
                f'–ó–∞–∫–∞—Ç —Å–æ–ª–Ω—Ü–∞: {sunset}')
    except Exception as e:
        logger.error(f'–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ: {e}')
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ"