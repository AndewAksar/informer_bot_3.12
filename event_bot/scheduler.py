# scheduler.py
import logging
import sqlite3
import pytz
from datetime import datetime
from telegram.ext import ContextTypes

from config import GROUP_CHAT_ID


logger = logging.getLogger(__name__)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–±—ã—Ç–∏–π
async def check_events(context: ContextTypes.DEFAULT_TYPE) -> None:
    try:
        # –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
        ekb_tz = pytz.timezone('Asia/Yekaterinburg')
        now = datetime.now(ekb_tz)
        current_date = now.strftime('%d.%m.%Y')
        current_time = now.time()
        current_datetime = now

        # # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º, –µ—Å–ª–∏ –≤—Ä–µ–º—è –ù–ï –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ —Å 06:00 –¥–æ 23:00
        # if not (6 <= current_time.hour < 23):
        #     logger.info(f"–ü—Ä–æ–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–±—ã—Ç–∏–π, —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {current_time}")
        #     return

        with sqlite3.connect('events.db', timeout=10) as conn:
            c = conn.cursor()
            # –ü–æ–ª—É—á–∞–µ–º —Å–æ–±—ã—Ç–∏—è –Ω–∞ —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
            c.execute(
                'SELECT id, title, date, time, description, photo_id FROM events WHERE date = ?',
                (current_date,)
            )
            events = c.fetchall()
            logger.info(f"–ù–∞–π–¥–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π –Ω–∞ –¥–∞—Ç—É {current_date}: {len(events)}")

            for event in events:
                event_id, title, date, time_str, description, photo_id = event
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–æ –ª–∏ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è —ç—Ç–æ–≥–æ —Å–æ–±—ã—Ç–∏—è —Å–µ–≥–æ–¥–Ω—è
                c.execute('SELECT COUNT(*) FROM sent_notifications WHERE event_id = ? AND date = ?',
                          (event_id, current_date))
                already_sent = c.fetchone()[0] > 0
                logger.info(f"–°–æ–±—ã—Ç–∏–µ ID={event_id}, already_sent={already_sent}")

                if not already_sent:
                    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                    notification_time = time_str if time_str else '10:00'
                    try:
                        notification_datetime = datetime.strptime(f"{date} {notification_time}", '%d.%m.%Y %H:%M')
                        notification_datetime = ekb_tz.localize(notification_datetime)
                        time_diff = (current_datetime - notification_datetime).total_seconds() / 60

                        if -1 <= time_diff <= 1:  # –û–∫–Ω–æ ¬±1 –º–∏–Ω—É—Ç—É
                            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ–±—Ä–µ–∑–∞–µ–º –µ–≥–æ –¥–æ 1024 —Å–∏–º–≤–æ–ª–æ–≤, —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–ø–∞—Å
                            message = f'üìÖ –°–µ–≥–æ–¥–Ω—è—à–Ω–µ–µ —Å–æ–±—ã—Ç–∏–µ!\n\n–ù–∞–∑–≤–∞–Ω–∏–µ: {title}\n–î–∞—Ç–∞: {date}\n–í—Ä–µ–º—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {notification_time}\n–û–ø–∏—Å–∞–Ω–∏–µ: {description}'
                            if len(message) > 1024:
                                message = message[:1024] + '...'
                                logger.warning(f"–ü–æ–¥–ø–∏—Å—å –∫ —Å–æ–±—ã—Ç–∏—é {event_id} –æ–±—Ä–µ–∑–∞–Ω–∞ –¥–æ 1024 —Å–∏–º–≤–æ–ª–æ–≤")


                            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
                            logger.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è —Å–æ–±—ã—Ç–∏—è ID={event_id}, title={title}")
                            if photo_id:
                                await context.bot.send_photo(chat_id=GROUP_CHAT_ID, photo=photo_id, caption=message)
                            else:
                                await context.bot.send_message(chat_id=GROUP_CHAT_ID, text=message)

                            logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–æ–±—ã—Ç–∏–∏: {title} (ID: {event_id})")

                            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏
                            try:
                                c.execute('INSERT INTO sent_notifications (event_id, date) VALUES (?, ?)',
                                          (event_id, current_date))
                                conn.commit()
                            except sqlite3.IntegrityError as e:
                                logger.warning("–ü–æ–ø—ã—Ç–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –≤—Å—Ç–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è event_id={event_id}, date={current_date}: {e}")
                                continue

                    except ValueError as e:
                        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ –≤—Ä–µ–º–µ–Ω–∏ —Å–æ–±—ã—Ç–∏—è {event_id}: {e}")
                        continue

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ–±—ã—Ç–∏–π: {e}")
